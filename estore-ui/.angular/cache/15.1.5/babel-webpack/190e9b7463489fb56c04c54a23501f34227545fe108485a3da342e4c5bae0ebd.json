{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../user.service\";\nimport * as i2 from \"../currentUser.service\";\nimport * as i3 from \"../cart.service\";\nimport * as i4 from \"../userUpdate.service\";\nimport * as i5 from \"@angular/router\";\nimport * as i6 from \"@angular/common\";\nfunction LoginComponent_div_9_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\")(1, \"label\", 5);\n    i0.ɵɵtext(2, \"Current User: \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(3);\n    i0.ɵɵelementStart(4, \"button\", 3);\n    i0.ɵɵlistener(\"click\", function LoginComponent_div_9_Template_button_click_4_listener() {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.logout());\n    });\n    i0.ɵɵtext(5, \" Log-out \");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r1.user.username, \" \");\n  }\n}\nexport class LoginComponent {\n  constructor(userService, currentUserService, cartService, userUpdateService, router) {\n    this.userService = userService;\n    this.currentUserService = currentUserService;\n    this.cartService = cartService;\n    this.userUpdateService = userUpdateService;\n    this.router = router;\n    this.user = null;\n    this.cart = null;\n  }\n  ngOnInit() {\n    this.getUser();\n  }\n  getUser() {\n    this.currentUserService.getCurrentUser().subscribe(curUser => this.user = curUser);\n  }\n  userUpdate(message) {\n    this.userUpdateService.sendUpdate(message);\n  }\n  add(name) {\n    name = name.trim();\n    if (!name) {\n      return;\n    }\n    this.userService.getUser(name).subscribe(newuser => {\n      this.user = newuser;\n      if (this.user == null) {\n        this.userService.addUser({\n          \"id\": 0,\n          \"username\": name\n        }).subscribe(newuser => {\n          this.user = newuser;\n          this.cartService.addCart({\n            \"id\": 0,\n            \"products\": new Map()\n          }).subscribe(newCart => {\n            this.cart = newCart;\n          });\n          this.currentUserService.setCurrentUser(this.user).subscribe(empty => {\n            this.userUpdate(\"login\");\n          });\n        });\n      } else {\n        this.currentUserService.setCurrentUser(this.user).subscribe(empty => {\n          this.userUpdate(\"login\");\n        });\n      }\n    });\n  }\n  logout() {\n    this.user = null;\n    this.currentUserService.deleteCurrentUser().subscribe(empty => {\n      this.userUpdate(\"logout\");\n    });\n  }\n}\nLoginComponent.ɵfac = function LoginComponent_Factory(t) {\n  return new (t || LoginComponent)(i0.ɵɵdirectiveInject(i1.UserService), i0.ɵɵdirectiveInject(i2.CurrentUserService), i0.ɵɵdirectiveInject(i3.CartService), i0.ɵɵdirectiveInject(i4.UserUpdateService), i0.ɵɵdirectiveInject(i5.Router));\n};\nLoginComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: LoginComponent,\n  selectors: [[\"app-login\"]],\n  decls: 10,\n  vars: 1,\n  consts: [[\"for\", \"Log-in\"], [\"id\", \"username\"], [\"userName\", \"\"], [\"type\", \"button\", 1, \"add-button\", 3, \"click\"], [4, \"ngIf\"], [\"for\", \"CurrentUser\"]],\n  template: function LoginComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      const _r4 = i0.ɵɵgetCurrentView();\n      i0.ɵɵelementStart(0, \"h2\");\n      i0.ɵɵtext(1, \"Log-in\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(2, \"div\")(3, \"label\", 0);\n      i0.ɵɵtext(4, \"Username: \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(5, \"input\", 1, 2);\n      i0.ɵɵelementStart(7, \"button\", 3);\n      i0.ɵɵlistener(\"click\", function LoginComponent_Template_button_click_7_listener() {\n        i0.ɵɵrestoreView(_r4);\n        const _r0 = i0.ɵɵreference(6);\n        ctx.add(_r0.value);\n        return i0.ɵɵresetView(_r0.value = \"\");\n      });\n      i0.ɵɵtext(8, \" Log-in \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(9, LoginComponent_div_9_Template, 6, 1, \"div\", 4);\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(9);\n      i0.ɵɵproperty(\"ngIf\", ctx.user);\n    }\n  },\n  dependencies: [i6.NgIf],\n  styles: [\"h2[_ngcontent-%COMP%] {\\r\\n    color: #A80000;\\r\\n    font-family: Arial, Helvetica, sans-serif;\\r\\n    font-weight: lighter;\\r\\n  }\\r\\n  \\r\\n  .clear[_ngcontent-%COMP%] {\\r\\n    color: #333;\\r\\n    background-color: #eee;\\r\\n    margin-bottom: 12px;\\r\\n    padding: 1rem;\\r\\n    border-radius: 4px;\\r\\n    font-size: 1rem;\\r\\n  }\\r\\n  .clear[_ngcontent-%COMP%]:hover {\\r\\n    color: white;\\r\\n    background-color: #42545C;\\r\\n  }\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvbG9naW4vbG9naW4uY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSwyQ0FBMkM7QUFDM0M7SUFDSSxjQUFjO0lBQ2QseUNBQXlDO0lBQ3pDLG9CQUFvQjtFQUN0Qjs7RUFFQTtJQUNFLFdBQVc7SUFDWCxzQkFBc0I7SUFDdEIsbUJBQW1CO0lBQ25CLGFBQWE7SUFDYixrQkFBa0I7SUFDbEIsZUFBZTtFQUNqQjtFQUNBO0lBQ0UsWUFBWTtJQUNaLHlCQUF5QjtFQUMzQiIsInNvdXJjZXNDb250ZW50IjpbIi8qIE1lc3NhZ2VzQ29tcG9uZW50J3MgcHJpdmF0ZSBDU1Mgc3R5bGVzICovXHJcbmgyIHtcclxuICAgIGNvbG9yOiAjQTgwMDAwO1xyXG4gICAgZm9udC1mYW1pbHk6IEFyaWFsLCBIZWx2ZXRpY2EsIHNhbnMtc2VyaWY7XHJcbiAgICBmb250LXdlaWdodDogbGlnaHRlcjtcclxuICB9XHJcbiAgXHJcbiAgLmNsZWFyIHtcclxuICAgIGNvbG9yOiAjMzMzO1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogI2VlZTtcclxuICAgIG1hcmdpbi1ib3R0b206IDEycHg7XHJcbiAgICBwYWRkaW5nOiAxcmVtO1xyXG4gICAgYm9yZGVyLXJhZGl1czogNHB4O1xyXG4gICAgZm9udC1zaXplOiAxcmVtO1xyXG4gIH1cclxuICAuY2xlYXI6aG92ZXIge1xyXG4gICAgY29sb3I6IHdoaXRlO1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogIzQyNTQ1QztcclxuICB9Il0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"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","names":["i0","LoginComponent","constructor","userService","currentUserService","cartService","userUpdateService","router","ngOnInit","getUser","getCurrentUser","subscribe","curUser","user","userUpdate","message","sendUpdate","add","name","trim","newuser","addUser","addCart","Map","newCart","cart","setCurrentUser","empty","logout","deleteCurrentUser","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["C:\\Users\\broke\\Desktop\\SWEN-261\\team-project-2225-swen-261-06-g-ritgaragesale\\estore-ui\\src\\app\\login\\login.component.html","C:\\Users\\broke\\Desktop\\SWEN-261\\team-project-2225-swen-261-06-g-ritgaragesale\\estore-ui\\src\\app\\login\\login.component.ts"],"sourcesContent":["<h2>Log-in</h2>\r\n<div>\r\n    <label for=\"Log-in\">Username: </label>\r\n    <input id=\"username\" #userName />\r\n  \r\n    <!-- (click) passes input value to add() and then clears the input -->\r\n    <button type=\"button\" class=\"add-button\" (click)=\"add(userName.value); userName.value=''\">\r\n      Log-in\r\n    </button>\r\n    <div *ngIf=\"user\">\r\n        <label for=\"CurrentUser\">Current User: </label>\r\n        {{user.username}}\r\n        <button type=\"button\" class=\"add-button\" (click)=\"logout()\">\r\n            Log-out\r\n          </button>\r\n    </div>\r\n\r\n  </div>","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { User } from '../user';\r\nimport { UserService } from '../user.service';\r\nimport { CurrentUserService } from '../currentUser.service';\r\nimport { Cart } from '../cart';\r\nimport { CartService } from '../cart.service';\r\nimport { UserUpdateService } from '../userUpdate.service'\r\nimport { Product } from '../product';\r\nimport { AppComponent } from '../app.component';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.css']\r\n})\r\nexport class LoginComponent implements OnInit {\r\n  user: User = null as unknown as User;\r\n  cart: Cart = null as unknown as Cart;\r\n\r\n  constructor(private userService: UserService,\r\n    private currentUserService: CurrentUserService,\r\n    private cartService: CartService,\r\n    private userUpdateService: UserUpdateService,\r\n    private router: Router ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.getUser();\r\n  }\r\n\r\n  getUser(): void {\r\n    this.currentUserService.getCurrentUser().subscribe(curUser => this.user = curUser);\r\n  }\r\n\r\n  userUpdate(message: string): void {\r\n    this.userUpdateService.sendUpdate(message);\r\n  }\r\n\r\n  add(name: string): void {\r\n    name = name.trim();\r\n    if (!name) { return; }\r\n    this.userService.getUser(name)\r\n    .subscribe(newuser => { \r\n        this.user = newuser\r\n        if (this.user == null){\r\n            this.userService.addUser({\"id\":0,\"username\":name} as User)\r\n              .subscribe(newuser => {\r\n                this.user = newuser;\r\n                this.cartService.addCart({\"id\":0, \"products\": new Map<number, Product>()} as Cart)\r\n                    .subscribe(newCart => {\r\n                    this.cart = newCart;\r\n                });\r\n                this.currentUserService.setCurrentUser(this.user).subscribe(empty => {this.userUpdate(\"login\");});\r\n                \r\n              });\r\n            \r\n        }\r\n        else{\r\n            this.currentUserService.setCurrentUser(this.user).subscribe(empty => {this.userUpdate(\"login\");});\r\n        }\r\n        \r\n    });\r\n    \r\n  }\r\n\r\n  logout(): void {\r\n    this.user = null as unknown as User;\r\n    this.currentUserService.deleteCurrentUser().subscribe(empty => {\r\n        this.userUpdate(\"logout\");\r\n    });\r\n    \r\n  }\r\n\r\n}"]},"metadata":{},"sourceType":"module","externalDependencies":[]}