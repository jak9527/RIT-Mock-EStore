{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { debounceTime, distinctUntilChanged, switchMap } from 'rxjs/operators';\nlet HeroSearchComponent = class HeroSearchComponent {\n  constructor(heroService) {\n    this.heroService = heroService;\n    this.searchTerms = new Subject();\n  }\n  // Push a search term into the observable stream.\n  search(term) {\n    this.searchTerms.next(term);\n  }\n  ngOnInit() {\n    this.heroes$ = this.searchTerms.pipe(\n    // wait 300ms after each keystroke before considering the term\n    debounceTime(300),\n    // ignore new term if same as previous term\n    distinctUntilChanged(),\n    // switch to new search observable each time the term changes\n    switchMap(term => this.heroService.searchProducts(term)));\n  }\n};\nHeroSearchComponent = __decorate([Component({\n  selector: 'app-product-search',\n  templateUrl: './hero-search.component.html',\n  styleUrls: ['./hero-search.component.css']\n})], HeroSearchComponent);\nexport { HeroSearchComponent };","map":{"version":3,"mappings":";AAAA,SAASA,SAAS,QAAgB,eAAe;AAEjD,SAAqBC,OAAO,QAAQ,MAAM;AAE1C,SACGC,YAAY,EAAEC,oBAAoB,EAAEC,SAAS,QACxC,gBAAgB;AAUjB,IAAMC,mBAAmB,GAAzB,MAAMA,mBAAmB;EAI9BC,YAAoBC,WAA2B;IAA3B,gBAAW,GAAXA,WAAW;IAFvB,gBAAW,GAAG,IAAIN,OAAO,EAAU;EAEO;EAElD;EACAO,MAAM,CAACC,IAAY;IACjB,IAAI,CAACC,WAAW,CAACC,IAAI,CAACF,IAAI,CAAC;EAC7B;EAEAG,QAAQ;IACN,IAAI,CAACC,OAAO,GAAG,IAAI,CAACH,WAAW,CAACI,IAAI;IAClC;IACAZ,YAAY,CAAC,GAAG,CAAC;IAEjB;IACAC,oBAAoB,EAAE;IAEtB;IACAC,SAAS,CAAEK,IAAY,IAAK,IAAI,CAACF,WAAW,CAACQ,cAAc,CAACN,IAAI,CAAC,CAAC,CACnE;EACH;CACD;AAvBYJ,mBAAmB,eAL/BL,SAAS,CAAC;EACTgB,QAAQ,EAAE,oBAAoB;EAC9BC,WAAW,EAAE,8BAA8B;EAC3CC,SAAS,EAAE,CAAE,6BAA6B;CAC3C,CAAC,GACWb,mBAAmB,CAuB/B;SAvBYA,mBAAmB","names":["Component","Subject","debounceTime","distinctUntilChanged","switchMap","HeroSearchComponent","constructor","heroService","search","term","searchTerms","next","ngOnInit","heroes$","pipe","searchProducts","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["C:\\Users\\k3din\\SWENProject\\team-project-2225-swen-261-06-g-ritgaragesale\\estore-ui\\src\\app\\product-search\\product-search.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\n\nimport { Observable, Subject } from 'rxjs';\n\nimport {\n   debounceTime, distinctUntilChanged, switchMap\n } from 'rxjs/operators';\n\nimport { Product } from '../product';\nimport { ProductService } from '../product.service';\n\n@Component({\n  selector: 'app-product-search',\n  templateUrl: './hero-search.component.html',\n  styleUrls: [ './hero-search.component.css' ]\n})\nexport class HeroSearchComponent implements OnInit {\n  heroes$!: Observable<Product[]>;\n  private searchTerms = new Subject<string>();\n\n  constructor(private heroService: ProductService) {}\n\n  // Push a search term into the observable stream.\n  search(term: string): void {\n    this.searchTerms.next(term);\n  }\n\n  ngOnInit(): void {\n    this.heroes$ = this.searchTerms.pipe(\n      // wait 300ms after each keystroke before considering the term\n      debounceTime(300),\n\n      // ignore new term if same as previous term\n      distinctUntilChanged(),\n\n      // switch to new search observable each time the term changes\n      switchMap((term: string) => this.heroService.searchProducts(term)),\n    );\n  }\n}"]},"metadata":{},"sourceType":"module","externalDependencies":[]}